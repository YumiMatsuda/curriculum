1. ロジック：プログラムを処理するための内容や手順のこと。アルゴリズムと同じような意味で使われる。
2. デバッグ：コンピュータプログラム内のバグを探し出して取り除くこと。
3. 開発手法(ウォーターフォール開発、アジャイル開発)
　　・ウォーターフォール開発：要件定義、外部設計、内部設計、開発、テスト、運用といった順に進める。
　　　計画を立てやすい、開発の進捗状況を把握しやすい、プロジェクト管理に適している、仕様書が確実に残る、
　　　処理性能を満たす設計作業を盛り込め、整合性が高い、成果物と一緒に費用を請求しやすいなどのメリットがあるので、
　　　メインフレームを中心とした大規模システムの開発に多用されている。
　　・アジャイル開発：開発工程を機能単位の小さい単位で繰り返すのが特長。仕様変更に強い。サービスインまでの時間を短縮できる。
4. アルゴリズム：問題を解決するための方法や手段のこと。
5. フローチャート図：処理の手順を図式化したもの。
6. 設計書(外部設計、内部設計)
　　・外部設計：操作画面や操作方法、データ出力など、ユーザーから見えるインターフェース部分の仕様を決定したり、
　　　　　　　　セキュリティや運用規定、システム開発のスケジュールや費用などを設計したりと基本的にユーザーに向けた仕様を設計すること。
　　・内部設計：外部設計の結果を実際にプログラミングできるように、システム内部に特化した詳細な設計を行うこと。
7. 要件定義(要求仕様書)：情報システムやソフトウェアについて顧客が望んでいる機能や仕様などの概略をまとめたもののこと。
8. システム開発におけるテスト(単体テスト、結合テスト、総合テスト)：
　　・単体テスト：プログラムを検証する作業の中でも、プログラムを手続きや関数といった個々の機能ごとに分割しそのそれぞれについて動作検証を行う手法のこと。
　　・結合テスト：システム開発におけるプログラムの検証作業の中でも、手続きや関数といった個々の機能を結合させて、うまく連携・動作しているかを確認するテストのこと。
　　・総合テスト：システム開発におけるプログラムの検証作業の中でも、構築したシステムが全体として予定通りの機能を満たしているかどうかを確認するテストのこと。
9. テスト仕様書(どのようなもの、項目)：システムやソフトウェアが、クライアントのヒアリングをもとに作り上げた
　　要件定義書の通りに機能するかどうかテストするポイントをまとめたドキュメントのこと。
　　単体テスト、結合テスト、機能テスト、システムテスト（負荷テスト、ボリュームテスト、セキュリティテストetc）、受け入れテスト（シナリオテスト）
　　運用テスト、リグレッションテストなどの項目がある。
10. バリデーション：対象がその仕様や文法などに照らして適切に記述・構築されているか否かを検証すること。
11. ログ(意味、確認の仕方)
　　・意味：コンピュータの利用状況やデータ通信など履歴や情報の記録を取る事、またその記録。
　　・確認の仕方：メニューバー「JECTOR」>「ログを表示…」をクリックする。
12. FW(フレームワーク)：問題に取り組むための概念や方法を体系化した枠組みのことや、ソフトウェア開発の土台となるプログラム部品などのこと。
13. PHPのFWの種類と特徴
　　・CakePHP：日本語に翻訳された優れたチュートリアルがあり、エラーメッセージが親切なため習得が早い。
　　　　　　　　パッケージをFTPでアップロードするだけで動作するため設置が簡単。
　　・CodeIgniter：「高速」「軽量」「シンプル」「低い学習コスト」「高い自由度」などの特徴により、開発しやすく扱いやすい。
　　・FuelPHP：比較的に新しく作られたPHPフレームワーク。規約よりも設定を重視しているため高度なアプリケーション開発に向いている。
　　・Laravel：CakePHP同様にWeb開発に必要な機能が一式揃えられており、コマンドが他のフレームワークに比べ豊富で追加することも簡単。
　　　　　　　　実装はとても簡単で、コードが分かりやすいため習得までが早い。
14. Ajax：あるWebページを表示した状態のまま、別のページや再読込などをせずにWebサーバ側と通信を行い、表示内容を変更する手法。
　　ページ上でプログラムを実行できるJavaScriptの拡張機能を使っている。
15. API：Application Programming Interfaceの略。ソフトウェアの機能を共有できる仕組み。
　　ソフトウェアからOSの機能を利用するための仕様またはインターフェースの総称で、アプリケーションの開発を容易にするためのソフトウェア資源のこと。
16. LAMP：オープンソースソフトウェアの組み合わせを表す言葉。具体的にはOSのLinux、WebサーバーのApache、データベースのMySQL、プログラミングのPerl、PHP、Pythonを指す。
17. クラウドサーバー、レンタルサーバー、VPSの違い
　　・クラウドサーバー：クラウド環境に作られたサーバーのこと。
　　・レンタルサーバー：サーバーを貸し出すサービスのこと。
　　　共用サーバーは１台のサーバーを複数のユーザーで共有して使うサービス、専用サーバーは特定のユーザーが1台のサーバーを専有して利用できるサービス、
　　・VPS（仮想専用）は１台のサーバーの中で契約者ごとに領域を区切りあたかも1つのサーバーのように設定されて（仮想化されて）提供されるもの。
18. AWS：Amazon Web Servicesの略。Amazon Web Servicesによって提供されているクラウドコンピューティングサービス（ウェブサービス）
　　　　　ストレージ、ネットワーク、データベースだけではなく、データ分析（アナリティクス）、アプリケーション、セキュリティ、モバイル、IoT、人工知能（AI）など多岐にわたる。
19. プラットフォーム：コンピュータにおいてソフトウェアが動作するための土台（基盤）として機能する部分のこと。
20. カバレッジ
　　・テストカバレッジ：出来上がったプログラムのテストをする際にどの範囲をテスト対象とするかという範囲。
　　・エリアカバレッジ：携帯電話や無線通信において、電波の送受信が可能な地域の範囲。
21. エビデンス：最終検証段階においてシステムが発注どおりに動作していることを示す、証拠となる書類やデータなどのこと。
22. コンパイル：プログラミング言語で書かれたコンピュータプログラム（ソースコード）を解析し、
　　　　　　　　　コンピュータが直接実行可能な形式のプログラム（オブジェクトコード）に変換すること。
23. バッチ処理：数のプログラムからなる作業において、あらかじめ一連の手順を登録しておき、まとめて連続的に実行する方式。
　　　　　　　　　または、一定期間や一定量ごとにデータをまとめて一括して処理する方式。
24. デプロイ(意味と方法、FTPソフトの種類)：開発したソフトウェアを実際の運用環境に配置、展開してシステムを利用可能な状態にすること。FFFTP、ilezillaなど。
25. データベース接続クライアント(説明、代表的なもの)：データベース管理システム (DBMS) や関係データベース管理システム (RDBMS) 上のデータを容易に扱うためのソフトウェアのこと。
　　　　　　　　　　　　　　　　　　　　　　　　　　　　代表的なもの：RazorSQL、DBeaver、TablePlus
26. Gitホスティングサービス(説明、代表的なもの)：Gitによるクラウドベースのバージョン管理システムのこと。
　　　　　　　　　　　　　　　　　　　　　　　　　代表的なもの：GitHub、GitLab、BitBucket、Assembla、Phabricator
27. チケット管理ツール(説明、代表的なもの)：要はタスク管理ツールのことです。 プロジェクト毎に発生する各種タスクを発行して、制作者に対して仕事を依頼するためのもの。
　　　　　　　　　　　　　　　　　　　　　　　代表的なもの：Backlog、
28. DBのJOINとは：データベースにおいて複数のテーブルを結合させること。内部結合と外部結合がある。
　　・内部結合：2つのテーブルで一致したデータ行のみ取得する。
　　・外部結合：2つのテーブルで一致しないデータも含めてどちらか一方のテーブルのデータを全て取得する。
29. SEO：Search Engine Optimizationの略。Webコンテンツのテキストや構成などを工夫することで、検索エンジンの検索結果ページの上位に自分のサイトが表示されるように実施する施策のこと。
30. オブジェクト指向：ンピュータプログラムの設計や実装についての考え方の一つで、互いに密接に関連するデータと手続き（処理手順）をオブジェクト（object）と呼ばれる一つのまとまりとして定義し、
　　　様々なオブジェクトを組み合わせて関連性や相互作用を記述していくことによりシステム全体を構築していく手法。
